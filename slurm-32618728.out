/scratch/yj2369/DL_VideoPred/segmentation/seg.py:51: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  train_x.append(torch.tensor(transform_image(f'./data/Dataset_Student/train/{i}/image_{j}.png'),dtype=torch.float))
cuda
0
Traceback (most recent call last):
  File "/scratch/yj2369/DL_VideoPred/segmentation/seg_run.py", line 52, in <module>
    main()
  File "/scratch/yj2369/DL_VideoPred/segmentation/seg_run.py", line 48, in main
    evaluation(model)
  File "/scratch/yj2369/DL_VideoPred/segmentation/seg_run.py", line 39, in evaluation
    seg.train_model_outer(100,10, model, device=device, beg=0, num_epochs=num_epochs, batch_size=batch_size,criterion=criterion, optimizer=optimizer, scheduler=scheduler)
  File "/scratch/yj2369/DL_VideoPred/segmentation/seg.py", line 162, in train_model_outer
    train_deeplabv3(inputs=train_x, labels=train_y, num_epochs=num_epochs, batch_size=batch_size, device=device, model=model, criterion=criterion, optimizer=optimizer, scheduler=scheduler)
  File "/scratch/yj2369/DL_VideoPred/segmentation/seg.py", line 126, in train_deeplabv3
    outputs = model(inputs[i:i+batch_size])['out']
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torchvision/models/segmentation/_utils.py", line 23, in forward
    features = self.backbone(x)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torchvision/models/_utils.py", line 69, in forward
    x = module(x)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/ext3/miniconda3/lib/python3.10/site-packages/torch/nn/modules/conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
